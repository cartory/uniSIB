[{"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/index.js":"1","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/App.js":"2","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/reportWebVitals.js":"3","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/Dashboard.js":"4","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/SolicitudView.js":"5","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/EstudianteView.js":"6","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/AutorView.js":"7","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/LibroView.js":"8","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/UbicacionView.js":"9","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/GeneroView.js":"10","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/utils/styles.js":"11","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/utils/Title.js":"12","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/solicitudController.js":"13","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/libroController.js":"14","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/estudianteController.js":"15","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/autorController.js":"16","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/ubicacionController.js":"17","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/generoController.js":"18","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/Controller.js":"19"},{"size":337,"mtime":1610475457430,"results":"20","hashOfConfig":"21"},{"size":156,"mtime":1610865725662,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1609388293276,"results":"23","hashOfConfig":"21"},{"size":5596,"mtime":1611553723457,"results":"24","hashOfConfig":"21"},{"size":16752,"mtime":1610929123696,"results":"25","hashOfConfig":"21"},{"size":13697,"mtime":1610929088507,"results":"26","hashOfConfig":"21"},{"size":11961,"mtime":1611548827805,"results":"27","hashOfConfig":"21"},{"size":17549,"mtime":1610929390556,"results":"28","hashOfConfig":"21"},{"size":14157,"mtime":1610929134377,"results":"29","hashOfConfig":"21"},{"size":12529,"mtime":1610929101482,"results":"30","hashOfConfig":"21"},{"size":2199,"mtime":1610418546298,"results":"31","hashOfConfig":"21"},{"size":362,"mtime":1610418548223,"results":"32","hashOfConfig":"21"},{"size":154,"mtime":1610928486421,"results":"33","hashOfConfig":"21"},{"size":144,"mtime":1610928258257,"results":"34","hashOfConfig":"21"},{"size":155,"mtime":1610928258255,"results":"35","hashOfConfig":"21"},{"size":147,"mtime":1610928414729,"results":"36","hashOfConfig":"21"},{"size":314,"mtime":1610928258258,"results":"37","hashOfConfig":"21"},{"size":313,"mtime":1610928258256,"results":"38","hashOfConfig":"21"},{"size":2164,"mtime":1610928258253,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"18vlohh",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/index.js",[],["80","81"],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/App.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/reportWebVitals.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/Dashboard.js",["82","83"],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/SolicitudView.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/EstudianteView.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/AutorView.js",["84"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport {\n    Fab,\n    Grid,\n    Paper,\n    Button,\n    TextField,\n    Typography,\n    Snackbar,\n\n    Table,\n    TableRow,\n    TableHead,\n    TableCell,\n    TableBody,\n\n    makeStyles,\n} from '@material-ui/core';\n\nimport {\n    Save as SaveIcon,\n    Edit as EditIcon,\n    Delete as DeleteIcon,\n    Replay as ReplayIcon,\n} from '@material-ui/icons';\n\nimport { Alert } from '@material-ui/lab';\n\nimport Title from './utils/Title';\nimport {\n    AutorController\n} from '../controllers/autorController'\n\nconst URL = \"http://localhost:8000/api/autores\";\nconst controller = new AutorController();\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        margin: theme.spacing(1),\n    },\n    paper: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        overflow: 'auto',\n        flexDirection: 'column',\n    },\n}));\n\n/**\n * DATATABLE COMPONENT\n * @param {*} props \n */\n\nconst DataTable = props => {\n    const [open, setOpen] = React.useState(false);\n    const { data, setState, editMode } = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    }\n\n    return (\n        <>\n            <Table size=\"small\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell size=\"small\" ><strong>ID</strong></TableCell>\n                        <TableCell><strong>Nombre</strong></TableCell>\n                        <TableCell><strong>Biografía</strong></TableCell>\n                        <TableCell><strong>Nacionalidad</strong></TableCell>\n                        <TableCell size=\"small\"><strong>Acción</strong></TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {\n                        data.map((row) => (\n                            <TableRow\n                                id={row.id}\n                                key={row.id}\n                                onMouseOver={() => {\n                                    document\n                                        .getElementById(row.id)\n                                        .style.backgroundColor = \"#ebf5fc\"\n                                }}\n                                onMouseLeave={() => {\n                                    document\n                                        .getElementById(row.id)\n                                        .style.backgroundColor = \"inherit\"\n                                }}\n                            >\n                                <TableCell size=\"small\" ><strong>{row.id}</strong></TableCell>\n                                <TableCell>{row.nombre}</TableCell>\n                                <TableCell>{row.biografia}</TableCell>\n                                <TableCell>\n                                    <Fab\n                                        disabled\n                                        size=\"small\"\n                                        variant=\"extended\"\n                                        style={{\n                                            color: \"black\"\n                                        }}\n                                    >{row.nacionalidad}\n                                    </Fab>\n                                </TableCell>\n                                <TableCell align=\"center\" size=\"small\">\n                                    <Grid container direction=\"row\">\n                                        <Grid item title=\"edit\">\n                                            <a\n                                                title=\"edit\"\n                                                href=\"#\" alt=\"#\"\n                                                style={{ color: \"green\" }}\n                                                onClick={() => editMode(row)}\n                                            >\n                                                <EditIcon />\n                                            </a>\n                                        </Grid>\n                                        <Grid item title=\"delete\">\n                                            <a\n                                                title=\"delete\"\n                                                href=\"#\" alt=\"#\"\n                                                style={{ color: \"indianred\" }}\n                                                onClick={() => controller.onDelete(\n                                                    row.id, [setState, setOpen]\n                                                )}\n                                            >\n                                                <DeleteIcon />\n                                            </a>\n                                        </Grid>\n                                    </Grid>\n                                </TableCell>\n                            </TableRow>\n                        ))\n                    }\n                </TableBody>\n            </Table>\n            <Snackbar\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <Alert\n                    color=\"warning\"\n                    elevation={0}\n                    variant=\"standard\"\n                    onClose={handleClose}\n                >\n                    Eliminado Correctamente\n                    </Alert>\n            </Snackbar>\n        </>\n    );\n}\n\n/**\n * FORM COMPONENT\n * @param {*} props \n */\n\nconst Form = props => {\n    const [open, setOpen] = React.useState(false);\n    const {\n        classes,\n        edit = false, autor,\n        setAutor, setState, setEdit,\n    } = props;\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') return;\n        setOpen(false);\n    }\n\n    const onSubmit = async event => {\n        event.preventDefault();\n        try {\n            await fetch(`${URL}/${edit ? autor[\"id\"] : \"\"}`, {\n                method: edit ? \"PUT\" : \"POST\",\n                headers: {\n                    \"Accept\": \"Application/json\",\n                    \"Content-Type\": \"Application/json\"\n                },\n                body: JSON.stringify(autor)\n            });\n            setState(true);\n            setOpen(true);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    return (\n        <>\n            <form onSubmit={(event) => {\n                event.preventDefault();\n            }}>\n                <Grid\n                    container\n                    spacing={3}\n                    direction=\"row\"\n                    alignContent=\"center\"\n                    alignItems=\"stretch\"\n                >\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            fullWidth\n                            name=\"nombre\"\n                            label=\"Nombre\"\n                            autoComplete=\"given-name\"\n                            required={!edit}\n                            helperText={autor[\"nombre\"]}\n                            onInput={e => controller.onInput(\n                                e.target, autor, setAutor\n                            )}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            fullWidth\n                            required={!edit}\n                            name=\"nacionalidad\"\n                            label=\"Nacionalidad\"\n                            autoComplete=\"family-name\"\n                            helperText={autor[\"nacionalidad\"]}\n                            onInput={e => controller.onInput(\n                                e.target, autor, setAutor\n                            )}\n                        />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                        <TextField\n                            fullWidth\n                            multiline\n                            name=\"biografia\"\n                            label=\"biografia\"\n                            autoComplete=\"family-name\"\n                            helperText={autor[\"biografia\"]}\n                            onInput={e => controller.onInput(\n                                e.target, autor, setAutor\n                            )}\n                        />\n                    </Grid>\n                    <Grid item>\n                        <Button\n                            size=\"small\"\n                            type=\"submit\"\n                            variant=\"contained\"\n                            color=\"primary\"\n                            style={edit ? { backgroundColor: \"green\" } : {}}\n                            className={classes.button}\n                            startIcon={<SaveIcon />}\n                        >Guardar</Button>\n                        <Button\n                            type=\"reset\"\n                            variant=\"contained\"\n                            onClick={() => {\n                                setAutor({})\n                                setEdit(false)\n                            }}\n                            size=\"small\"\n                            className={classes.button}\n                            startIcon={< ReplayIcon />}\n                        >Limpiar</Button>\n                    </Grid>\n                </Grid>\n            </form>\n            <Snackbar\n                open={open}\n                autoHideDuration={3000}\n                onClose={handleClose}\n            >\n                <Alert\n                    color={edit ? \"success\" : \"info\"}\n                    elevation={0}\n                    variant=\"standard\"\n                    onClose={handleClose}\n                >\n                    Guardado Correctamente\n                </Alert>\n            </Snackbar>\n        </>\n    );\n}\n\n/**\n * AUTOR VIEW \n * @param {*} props \n */\n\nexport const AutorView = props => {\n    const classes = useStyles();\n\n    const [data, setData] = React.useState([]);\n    const [autor, setAutor] = React.useState({});\n\n    const [edit, setEdit] = React.useState(false);\n    const [state, setState] = React.useState(true);\n\n\n    const editMode = row => {\n        setEdit(true);\n        setAutor(row);\n    }\n\n    React.useEffect(() => {\n        if (state) {\n            setState(false);\n            fetch(URL)\n                .then(async res => setData(await res.json()))\n                .catch(err => console.error(err));\n        }\n    }, [state])\n\n    return (\n        <React.Fragment>\n            <Typography variant=\"h4\" gutterBottom color=\"primary\">\n                <strong>GESTIONAR AUTOR</strong>\n            </Typography>\n            <Grid\n                container\n                direction=\"row\"\n                spacing={5}\n                alignItems=\"flex-start\"\n            >\n                <Grid item xs={12} sm={4}>\n                    <Paper className={classes.paper}>\n                        <Title>\n                            {edit ? \"Editar \" : \"Crear \"}Autor\n                        </Title>\n                        <Form\n                            classes={classes}\n                            edit={edit} autor={autor}\n                            setEdit={setEdit}\n                            setAutor={setAutor}\n                            setState={setState}\n                        />\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} sm={8}>\n                    <Paper className={classes.paper}>\n                        <Title>Ver Autores</Title>\n                        <DataTable\n                            data={data}\n                            setState={setState}\n                            editMode={editMode}\n                        />\n                    </Paper>\n                </Grid>\n            </Grid>\n        </React.Fragment >\n    );\n}","/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/LibroView.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/UbicacionView.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/GeneroView.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/utils/styles.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/views/utils/Title.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/solicitudController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/libroController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/estudianteController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/autorController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/ubicacionController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/generoController.js",[],"/Users/cartory/Desktop/UNI/ARQUI/primer parcial/UNISIB-MVC/uniSIB/client/src/controllers/Controller.js",[],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":38,"column":17,"nodeType":"91","messageId":"92","endLine":38,"endColumn":29},{"ruleId":"89","severity":1,"message":"93","line":39,"column":15,"nodeType":"91","messageId":"92","endLine":39,"endColumn":25},{"ruleId":"89","severity":1,"message":"94","line":175,"column":11,"nodeType":"91","messageId":"92","endLine":175,"endColumn":19},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'BarChartIcon' is defined but never used.","Identifier","unusedVar","'LayersIcon' is defined but never used.","'onSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]